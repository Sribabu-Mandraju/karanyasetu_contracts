// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity ^0.8.20;

import {Script, console} from "forge-std/Script.sol";
import {DisasterRelief, IDisasterRelief} from "../src/DisasterRelief.sol";

contract TestClaim is Script {
    address disasterRelief = 0xe6E78e10D28D82210A77D46d521A8858D22607bf;
    uint256 nullifierSeed = 1234;
    uint256 nullifier = 9591091729611357044368889402741503908904454041819252450740038903154063606215;
    uint256[4] dataToReveal = [0, 0, 1, 1];
    uint256 timestamp = block.timestamp;
    uint256[8] proof = [
        94788544229640640130787786141662024024997314304631676376181401289867377513,
        7519301902987797216495218180403412927482584904022314677116770460604230025724,
        1,
        16508141217822728209246137534510351374490789504343134358571964799004026832553,
        4983377436628372495865622679851180716613061483514519718485756689651869121024,
        21478409900222643991193156860528545883568749708857962366619983782210805484403,
        1826356712713326278208114180146582702642458447643513759139217305704576313665,
        16643625062856442730825190944613815674490185195319893131632411391396168463234
    ];

    function run() external {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        DisasterRelief drc = DisasterRelief(disasterRelief);
        drc.withdrawFunds();
        vm.stopBroadcast();
    }
}
